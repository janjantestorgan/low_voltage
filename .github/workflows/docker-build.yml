name: Docker-Image-Build-Publish

on:
  push:
    branches:
      - 'dev'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Git
        run: git config --global user.name "Your Name" && git config --global user.email "youremail@example.com"

      - name: Determine new tag version
        id: tag
        run: |
          CURRENT_DATE=$(date -u +"%Y-%m-%d")
          PREVIOUS_TAG=$(git describe --abbrev=0 --tags || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            VERSION=${PREVIOUS_TAG#v}
            IFS='.' read -ra PARTS <<< "$VERSION"
            MAJOR=${PARTS[0]}
            MINOR=${PARTS[1]}
            PATCH=${PARTS[2]}
            PATCH=$((PATCH + 1))
            NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          else
            NEW_TAG="v1.0.0"
          fi
          echo "::set-output name=new_tag::$NEW_TAG"

      - name: Create new Git tag
        run: |
          git tag ${{ steps.tag.outputs.new_tag }}
          git push origin ${{ steps.tag.outputs.new_tag }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

