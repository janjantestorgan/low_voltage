name: Docker-Image-Build-Publish

on:
  push:
    branches:
      - 'dev'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get latest tag
        id: get_latest_tag
        run: echo "::set-output name=TAG::$(git describe --abbrev=0 --tags)"

      - name: Determine new tag
        id: determine_tag
        run: |
          LATEST_TAG=${{ steps.get_latest_tag.outputs.TAG }}
          TAG_NUMBER=$(echo $LATEST_TAG | sed 's/v\.//')
          TAG_NUMBER=$((TAG_NUMBER + 1))
          NEW_TAG="v.$TAG_NUMBER"
          echo "::set-output name=NEW_TAG::$NEW_TAG"

      - name: Create and push tag
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          NEW_TAG=${{ steps.determine_tag.outputs.NEW_TAG }}
          git tag $NEW_TAG
          git push origin $NEW_TAG

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
